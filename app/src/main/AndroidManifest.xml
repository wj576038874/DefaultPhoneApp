<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools">

    <!--
    在AndroidManifest.xml中使用<uses-feature>标签来声明应用使用的硬件功能。android:required属性用于指示该硬件功能是否是应用运行所必需的。
    具体而言：
    android:required="true"（默认值）：表示应用必须依赖该硬件功能。如果设备不支持该硬件功能，则应用将无法安装。例如：
    <uses-feature android:name="android.hardware.telephony" android:required="true" />
    这种情况下，如果设备没有电话功能（即不支持android.hardware.telephony），则应用将无法安装。

    android:required="false"：表示该硬件功能对应用是可选的。如果设备不支持该硬件功能，应用仍然可以安装并运行，但某些功能可能不可用。例如：
    <uses-feature android:name="android.hardware.telephony" android:required="false" />
    这种情况下，即使设备没有电话功能，应用也可以安装和运行。-->

    <!--该应用需要使用电话硬件功能，required=false 代表 如果手机没有电话硬件也可以安装，required=true  如果手机没有电话硬件则无法安装-->
    <uses-feature
        android:name="android.hardware.telephony"
        android:required="false" />

    <!--拨打电话-->
    <uses-permission android:name="android.permission.CALL_PHONE" />
    <!--通知-->
    <uses-permission android:name="android.permission.POST_NOTIFICATIONS" />
    <!--读取电话状态和信息-->
    <uses-permission android:name="android.permission.READ_PHONE_STATE" />
    <!--允许前台服务-->
    <uses-permission android:name="android.permission.FOREGROUND_SERVICE" />
    <!--电话前台服务-->
    <uses-permission android:name="android.permission.FOREGROUND_SERVICE_PHONE_CALL" />
    <!--拨打电话-->
    <uses-permission android:name="android.permission.MANAGE_OWN_CALLS" />
    <uses-permission android:name="android.permission.PROCESS_OUTGOING_CALLS" />

    <uses-permission android:name="android.permission.READ_CALL_LOG" />
    <uses-permission android:name="android.permission.WRITE_CALL_LOG" />
    <uses-permission android:name="android.permission.READ_PHONE_NUMBERS" />
    <uses-permission android:name="android.permission.ANSWER_PHONE_CALLS" />

    <application
        android:allowBackup="true"
        android:dataExtractionRules="@xml/data_extraction_rules"
        android:fullBackupContent="@xml/backup_rules"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/Theme.DefaultPhoneApp"
        tools:targetApi="31">
        <activity
            android:name=".MainActivity"
            android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>

        <service
            android:name=".MyService"
            android:foregroundServiceType="phoneCall" />
        <service
            android:name=".MyInCallService"
            android:exported="true"
            android:permission="android.permission.BIND_INCALL_SERVICE">
            <meta-data
                android:name="android.telecom.IN_CALL_SERVICE_UI"
                android:value="true" />
            <meta-data
                android:name="android.telecom.IN_CALL_SERVICE_RINGING"
                android:value="true" />

            <intent-filter>
                <action android:name="android.telecom.InCallService" />
            </intent-filter>
        </service>

        <activity
            android:name=".MyPhoneCallActivity"
            android:exported="true"
            android:launchMode="singleTask"
            android:showOnLockScreen="true"
            android:showWhenLocked="true"
            android:turnScreenOn="true">
            <intent-filter>
                <action android:name="android.intent.action.DIAL" />
                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
            <intent-filter>
                <action android:name="android.intent.action.DIAL" />
                <category android:name="android.intent.category.DEFAULT" />
                <data android:scheme="tel" />
            </intent-filter>
        </activity>


        <receiver
            android:name=".NotificationBroadcastReceiver"
            android:enabled="true"
            android:exported="false">

        </receiver>

        <activity android:name=".calllog.CallLogActivity"/>

        <service android:name=".calllog.CallLogService"/>
    </application>

</manifest>